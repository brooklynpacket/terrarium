{"body":"# Terrarium\r\n\r\n[![Build Status](https://secure.travis-ci.org/PolicyStat/terrarium.png)](http://travis-ci.org/PolicyStat/terrarium)\r\n\r\nPackage and ship relocatable python virtual environments, like a boss.\r\n\r\nTerrarium will package up and compress a virtualenv for you based on pip\r\nrequirements and then let you ship that environment around.  Do the\r\ncomplex dependency math one time and then every subsequent install is\r\nbasically at the speed of file transfer + decompression.\r\n\r\n## The Problem Terrarium Solves\r\n\r\nPip and virtualenv are awesome, but pip is not designed to allow\r\nconsistent and reproducable updates of existing environments.  Pip is\r\nalso a general installation tool, meaning that it's not near as fast as\r\nshipping around compressed source code.  This means that even if you\r\nhave well-made requirements files, your pip-based deploys are either\r\nslow or inconsistent.\r\n\r\n## Installation\r\n\r\nInstall using pip:\r\n\r\n    pip install terrarium\r\n\r\n## Basic Usage\r\n\r\n    terrarium [options] COMMAND [requirements files...]\r\n\r\nCreating a new environment:\r\n\r\n    terrarium --target testenv install requirements.txt more_requirements.txt\r\n\r\nAfter this command finishes, `testenv` will be configured with all of\r\nthe requirements specified in `requirements.txt` and\r\n`more_requirements.txt`.\r\n\r\nAdditionally, terrarium creates a script in `testenv/bin/terrarium_bootstrap.py` that can be used to generate a fresh environment using exactly the same requirements. This behavior can be disabled by using the `--no-bootstrap` option.\r\n\r\nIf `testenv` is an already existing environment, it will replace it with a fresh environment, and preserve the old environment as `testenv.bak`.\r\n\r\n    source testenv/bin/activate\r\n    terrarium install test_requirements.txt\r\n\r\nWhen a virtualenv is already activated, the --target option defaults to\r\nthe activated environment. Terrarium will replace the activated\r\nenvironment (`testenv`) with a fresh environment defined by `test_requirements.txt`.\r\nThe old environment is preserved at `testenv.bak`.\r\n\r\n## Terrarium archives\r\n\r\n    terrarium --target testenv --storage-dir /mnt/storage install requirements.txt more_requirements.txt\r\n\r\nAfter building a fresh environment, terrarium will archive and compress\r\nthe environment, and then copy it to the location specified by\r\n`storage-dir`.\r\n\r\nSubsequent installs for the same requirement set that specify the same\r\n`storage-dir`, terrarium will copy and extract the compressed archive\r\nfrom `/mnt/storage`.\r\n\r\nTo display exactly how terrarium will name the archive, you can run the\r\nfollowing command:\r\n\r\n    terrarium key requirements.txt more_requirements.txt\r\n    x86_64-2.6-c33a239222ddb1f47fcff08f3ea1b5e1\r\n\r\nBy default the key includes the system architecture, python version and\r\nthe MD5 digest of the sorted contents of the requirements files. The\r\ndigest used can be customized with `--digest-type`, and the key format\r\ncan be specified using `--remote-key-format`.\r\n\r\nYou can prevent terrarium from either uploading or downloading archives\r\nusing the `--no-upload` and `--no-download` options.\r\n\r\n## Using S3 storage backend\r\n\r\nterrarium supports storing and retrieving archives on Amazon S3. These\r\noptions will only be available if `boto` is installed.\r\n\r\n    --s3-bucket\r\n    --s3-access-key\r\n    --s3-secret-key\r\n    --s3-max-retries\r\n\r\nEach of these options can be specified using environment variables, e.g.\r\n`S3_BUCKET` instead of being passed in as a parameter.\r\n\r\n## Python/Platform Support\r\n\r\nCurrently, python 2.5, 2.6 and 2.7 on Linux are supported and tested.\r\nPython 3 support is \r\n[planned](https://github.com/PolicyStat/terrarium/issues/8) and\r\nWindows support is an option if folks require it (pull requests and\r\nbug reports welcome).\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Terrarium","google":"","tagline":"Package and ship relocatable python virtualenvs, like a boss."}